var sprintf = require('sprintf').sprintf;

var _stdout = process.stdout;
var _stderr = process.stderr;

var _writer = _stderr;
var _level;

LEVELS = {
  ERROR: 1,
  WARN:  2,
  INFO:  3,
  DEBUG: 4,
  TRACE: 5,
}

config = {
  format: 'application/json',
  level: LEVELS.INFO,
  writer: _stderr.write
}

_level = config.level;
_writer = config.writer;

var outputFormatters = {
  'text/plain': function(level, args) {
    var msg = sprintf.apply(null, args) + '\n';
    var out = level + ' ' + msg;
    return out;
  },
  'application/json': function(level, args) {
    var msg = sprintf.apply(null, args); 
    var out = {level: level, message: msg};
    return out;
  }
}

var _format = function(level, args) {
  return outputFormatters[config.format](level, args);
}

module.exports = {
  info: function() {
    if (_level >= LEVELS.INFO) 
    _writer(_format("INFO", arguments));
  },
  err: function() {
    if (_level >= LEVELS.ERROR) 
    _writer(_format("ERROR", arguments));
  },
  debug: function() {
    if (_level >= LEVELS.DEBUG) 
      _writer(_format("DEBUG", arguments));
  },
  trace: function() {
    if (_level >= LEVELS.TRACE) 
    _writer(_format("TRACE", arguments));
  },
  level: function(newlevel) {
    if (newlevel == undefined) {
      return _level;
    }
    else {
      var n = newlevel.toUpperCase();
      if (LEVELS[n] !== undefined) {
        _level = LEVELS[n];
      } 
    }
  },
  setWriter: function(writer) {
    if (typeof writer == 'function') {
      _writer = writer;
    } 
    else {
      throw new Error("writer must be a function");
    }
  }
}
